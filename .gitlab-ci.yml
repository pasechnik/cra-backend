image: docker:stable

# When using dind, it's wise to use the overlayfs driver for
# improved performance.

variables:
  DOCKER_DRIVER: overlay2
  CONTAINER_PROJECT: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
  CONTAINER_IMAGE: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG
  CONTAINER_TAG: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_TAG
  LATEST_IMAGE: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:latest

stages:
  - build

services:
  - docker:dind

before_script:
  - docker info

# This template adds the boilerplate for interacting with gitlab's docker registry
.docker_registry_template: &docker_registry
  image: docker:git
  services:
    - docker:dind
  before_script:
    - docker login --username gitlab-ci-token --password $CI_JOB_TOKEN $CI_REGISTRY
#  after_script:
#    - docker logout registry.gitlab.com

docker-build-branch:
  stage: build
  <<: *docker_registry
  script:
    - docker build --cache-from $LATEST_IMAGE -t $CONTAINER_IMAGE .
    #    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $CONTAINER_IMAGE
  only:
    - branches
  except:
    - master

docker-build-tag:
  stage: build
  <<: *docker_registry
  script:
    - docker build --cache-from $LATEST_IMAGE -t $CONTAINER_TAG .
    #    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $CONTAINER_TAG
  only:
    - tags

docker-build-latest:
  stage: build
  <<: *docker_registry
  script:
    - docker build --cache-from $LATEST_IMAGE -t $LATEST_IMAGE .
    #    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $LATEST_IMAGE
  only:
    - master
